#!/usr/bin/env bash
# Convertit un fichier markdown en un fichier PDF via pandoc
# Copyright (C) 2016-2021 Bruno BEAUFILS
#
# usage: md2pdf [OPTIONS] SOURCE
#
# md2pdf est un emballage de pandoc qui permet de convertir un fichier
# au format Markdown vers un fichier au format PDF en tant que
# diaporama ou rapport.
#
# SOURCE est le fichier au format Markdown. Il doit avoir comme suffixe
# `.md`. Le fichier PDF est généré dans le répertoire courant.
#
# # OPTIONS
#
#     -h, --help               affiche ce message d'aide
#         --man                affiche la documentation
#     -p, --presentation       produit une présentation (défaut)
#     -r, --report             produit un rapport
#     -t, --theme THEME        utilise THEME (au lieu de `ulille`) comme
#                              personnalisation. THEME vide ou égal à `list`
#                              affiche ceux embarqués dans le script.
#     -d, --demo [DIR]         produit des fichiers exemples dans `.` (ou DIR)
#     -L, --latex              produit le source LaTeX (au lieu du résultat PDF)
#     -P, --pandoc-extra ARGS  ajoute ARGS à la ligne de commande pandoc
#     -C, --confdir DIR        dépose la config dans DIR (au lieu de ./etc)
#     -V, --version            affiche la version du script
#
##
# # DESCRIPTION
#
#     Ce programme paramètre pandoc via des filtres et des modèles
#     (templates) pour générer un diaporama ou un rapport en PDF. Il
#     exécute la transformation via des règles stockées dans un
#     fichier `makefile`.
#
#     Il gère le format [Markdown de Pandoc] en entrée avec quelques
#     ajouts.
#
#     - Les formats d'images pris en charge sont pdf (pour du
#       vectoriel) et png ou jpg (pour du matriciel). Les images
#       incluses dans SOURCE avec un nom suffixé par `.svg` sont
#       automatiquement recherchées avec l'extension `.pdf` à la
#       place. La conversion des fichiers eux-mêmes doit avoir été
#       faite auparavant.
#
#     - Les images peuvent être centrées sur la largeur de page si
#       elles ont la classe `.center`.
#
#     - SOURCE peut inclure d'autres fichiers markdown grâce au filtre
#       [include-files] et peut inclure du code depuis des fichiers
#       externes grâce au filtre [include-code-files].
#
#     - Pour une transformation en présentation, les diapositives sont
#       les sections de niveau 2, avec le titre de la section comme
#       titre de diapositive. On peut changer le niveau via la
#       variable d'environnement SLIDELEVEL.
#
#     [Markdown de Pandoc]: https://pandoc.org/MANUAL.html#pandocs-markdown
#     [include-files]: https://github.com/pandoc/lua-filters/tree/master/include-files
#     [include-code-files]: https://github.com/pandoc/lua-filters/tree/master/include-code-files
#
#     Le style du document généré est personnalisable par un
#     thème. Certains sont embarqués et extraits si nécessaire. Par
#     défaut c'est le thème embarqué `ulille` qui est utilisé. Ce
#     choix est modifiable par la variable d'environnement `$THEME` ou
#     l'option `-t`.
#
# # DEPENDANCES
#
#     Pour fonctionner md2pdf a besoin que [pandoc] ainsi qu'une
#     installation TeX (avec `pdflatex` et la classe `beamer.cls`)
#     soit accessible. Seule la distribution [TeXLive] disponible pour
#     Unix et Windows (sous le nom [MacTeX] pour Mac OS X) a été
#     testée.
#
#     Par ailleurs il a besoin de filtres POSIX standards (`cut`,
#     `grep`, `sed`, `tr`) mais également des commandes `base64`,
#     `realpath` et de la version GNU de [make].
#
#     [pandoc]: http://pandoc.org
#     [TeXLive]: http://tug.org/texlive
#     [MacTeX]: http://tug.org/mactex
#     [make]: https://www.gnu.org/software/make
#
#     Sur une distribution Debian stable (aka `buster` aujourd'hui)
#     ceci correspond aux paquets :
#
#     - coreutils
#     - make
#     - pandoc
#     - texlive-latex-base
#     - texlive-latex-recommanded
#
# # DETAILS D'IMPLEMENTATION
#
#     pandoc transforme le fichier en PDF en passant par [LaTeX]. Pour
#     les diaporamas il utilise la classe LaTeX [Beamer].
#
#     [LaTeX]: https://www.latex-project.org
#     [Beamer]: https://github.com/josephwright/beamer
#
#     Par défaut l'ensemble des fichiers nécessaires à la
#     transformation (filtres, modèles, thèmes, logos) sont déposés
#     dans le dossier `etc` du dossier courant. Ce dossier est
#     modifiable via l'option `-C`.
#
# ## FILTRES
#
#     Des filtres pandoc [lua] sont utilisés pour la conversion. Ils
#     étendent le comportement de base de pandoc :
#
#     - [include-files]
#     - [include-code-files]
#     - center-image
#     - svg-image-to-pdf
#
#     [lua]: https://pandoc.org/lua-filters.html
#
# ## TEMPLATES
#
#     Des [templates] pandoc spécifiques sont utilisés pour les
#     transformations. Ils définissent la composition du document
#     généré :
#
#     - `beamer-pandoc.tex` pour les diaporamas. Il importe un thème
#       Beamer depuis le fichier `beamerthemeTHEME.sty` via
#       '\usetheme{}'.
#
#     - `report-pandoc.tex` pour les rapports. Il importe un paquet
#       LaTeX `reportthemeTHEME.sty` via `\usepackage{}`.
#
#     Ces modèles utilisent des variables pour la génération de la
#     page de titre. Les variables peuvent être spécifiées dans un
#     bloc YAML dans SOURCE.
#
#     [templates]: https://pandoc.org/MANUAL.html#templates
#
# ## FICHIERS EMBARQUES
#
#     Des fichiers nécessaires autres que les sources (modèles pandoc,
#     thèmes, logos, exemples) sont embarqués en fin de script (pour
#     pouvoir diffuser le script et rien d'autre). L'embarquement est
#     fait entre deux lignes sous la forme :
#
#         # begin-THEMES FILENAME [ENCODAGE]
#         ...
#         # end FILENAME
#
#     THEMES correspond à une liste de thème pour lesquels le fichier est
#     nécessaire et doit donc être extrait avant la conversion. Dans cette
#     liste les thèmes sont séparés les uns des autres par un tiret (-). Si
#     THEMES vaut juste `all` le fichier est extrait pour tous les thèmes.
#
#     ENCODAGE peut être base64. Quand il est absent la commande à utiliser
#     pour reconstruire le fichier est juste `cat` (quand le contenu est
#     textuel et qu'il faut juste l'extraire). Quand il vaut base64 (quand le
#     contenu du fichier est binaire et qu'on l'a embarqué en base64) on
#     utilise `base64 -d`.
#
#     L'inclusion des fichiers est compatible (listage, extraction, etc.) avec
#     la commande shembed.
#
#     [shembed]: https://gitlab.univ-lille.fr/b3/util-shembed
#
#  

# TODO: transformer la documentation en markdown (pour exporter en HTML, PDF, man)
# TODO: ajouter un mode article
# TODO: inclure modele-diaporama.md et permettre son extraction

# CONVENTIONS DE CODAGE
#
# Quand on ajoute/modifie quelque chose il faut penser à un fonctionnement
# sous Linux **et** BSD (e.g. MacOS X). Il faut par exemple être
# précautionneux avec les options de commandes Unix classiques qui sont
# souvent différentes. Dans l'idéal il faudrait penser POSIX.

VERSION=2.0.202100206-1

_CMD=$(realpath $0)

# sed POSIX pour être portable ('v' est spécifique à GNU sed)
_gnu=$(sed v </dev/null >/dev/null 2>&1 && echo " --posix") 
_sed () { sed $_gnu -E "$@" ; }
_die () { echo "${0##*/}: error: $*" 1>&2 ; exit 1 ; }
_dbg () { _sed 's/^/DEBUG: /' <<<"$@" 2>&1 ; }
_doc () { _sed -n '2,/^ *##$/ { s/^ *#([^#]|$)// ; s/^ //g ; t e ; d ; :e ; p }' <$_CMD ; }
_man () { _sed -n '2,/^$/ { s/^ *#([^#]|$)// ; s/^ //g ; t ok ; d ; :ok ; p }' <$_CMD | pager ; }
_opt () { [[ x$1 =~ x-.* ]] ; }
_mute () { 1>/dev/null 2>&1 "$@" ; }

# liste les fichiers pour un thème donné (avec leur encodage)
# args: theme
list_files ()
{
    grep '^# begin-' -- "$_CMD" \
        | grep -e "-$1[- ]" \
        | _sed -e 's/^# begin-[^ ]+ (.*)$/\1/'
}

# liste les thèmes qui embarque des fichiers dans le script
list_themes ()
{
    grep '^# begin-' -- "$_CMD" \
        | _sed -e 's/^# begin-([^ ]+) .*$/\1/' \
        | tr '-' '\n' | sort | grep -vx -e all -e demo | uniq
}

# extrait tous les fichiers d'un thème embarqué dans le script
# args: dstdir theme
extract_files ()
{
    list_files $2 | while read file enc
    do
        e=cat && [ "x$enc" = xbase64 ] && e="base64 -d"
        _sed -n '/^# begin[^ ]* '"$file"'(| .*)$/,/^# end '"$file"'$/ p' -- "$_CMD" \
            | _sed '1d ; $d' \
            | $e >"$1/$file"
    done
}

##############################################################################

_mute which make || _die "make: unavailable"
_mute which pandoc || _die "pandoc: unavailable"
_mute which base64 || _die "base64: unavailable"
_mute which pdflatex || _die "pdflatex: unavailable"
_mute kpsewhich beamer.cls || _die "beamer.cls: unavailable"

TYPE=beamer
[ ${0##*/} = "md2beamer" ] && TYPE=beamer
[ ${0##*/} = "md2report" ] && TYPE=report

test -z $CONFDIR && CONFDIR=./etc

test -z $THEME && THEME=ulille

_ext=.pdf

# gestion des options et arguments
while _opt $1
do
    case "$1" in
        "-h"|"--help") _doc && exit 0 ;;
        "--man") _man && exit 0 ;;
        "-p"|"--presentation") TYPE=beamer ;;
        "-r"|"--report") TYPE=report ;;
        "-t"|"--theme")
            if [ -z "$2" ] || _opt "$2" || [ "$2" = "list" ] ; then
                list_themes && exit 0
            fi
            THEME=$2
            shift
            ;;
        "-d"|"--demo") extract_files "${2:-.}" demo ; exit 0 ;;
        "-L"|"--latex") _ext=.tex ;;
        "-P"|"--pandoc-extra")
            test -z "$2" && _die "$1: missing args"
            EXTRAS="$EXTRAS $2"
            shift
            ;;
        "-C"|"--confdir")
            test -z "$2" && die "$1: missing directory"
            CONFDIR="$2"
            shift
            ;;
        "-V"|"--version") echo $VERSION && exit 0 ;;
        "--") shift ; break ;;
        *) _die "$1: unknown option" ;;
    esac
    shift
done

# vérifications source
[ -z "$1" ] && _die "missing source file"
[ -r "$1" ] || _die "$1: unable to read"
FILE="${1%.*}$_ext"

# extraction des fichiers
if ! test -d "$CONFDIR" ; then
    mkdir -p "$CONFDIR" || _die "$CONFDIR: unable to create directory"
fi
extract_files "$CONFDIR" all
extract_files "$CONFDIR" $THEME

# transformation
export CONFDIR FILE THEME EXTRAS
make -f $CONFDIR/makefile-pandoc $TYPE

##############################################################################

exit 0

##############################################################################

# begin-all makefile-pandoc 
.PHONY: clean reset

CONFDIR ?= $(dir $(MAKEFILE_LIST))etc

beamer: $(FILE)
beamer: TEMPLATE ?= $(CONFDIR)/pandoc-beamer.tex
beamer: THEME ?= ulille
beamer: SLIDELEVEL ?= 2
beamer: ARGS += -t beamer
beamer: ARGS += --slide-level=$(SLIDELEVEL)

report: $(FILE)
report: TEMPLATE ?= $(CONFDIR)/pandoc-report.tex
report: THEME ?= cgir
report: ARGS += -t latex
report: ARGS += --top-level-division=chapter
report: ARGS += -N

ARGS = --standalone
ARGS += --template=$(TEMPLATE)
ARGS += --pdf-engine-opt=-shell-escape
ARGS += -L $(CONFDIR)/include-files.lua
ARGS += -L $(CONFDIR)/include-code-files.lua
ARGS += -L $(CONFDIR)/center-image.lua
ARGS += -L $(CONFDIR)/svg-image-to-pdf.lua
ARGS += -V theme=$(THEME)
ARGS += -V themeoptions=$(THEMEOPTIONS)
ARGS += --toc
ARGS += --highlight-style=tango

%.pdf %.tex: %.md $(MAKEFILE_LIST) $(wildcard $(CONFDIR)/*)
	TEXINPUTS=.//:$(CONFDIR): pandoc $(ARGS) $(EXTRAS) -o $@ -- $<

%.pdf: %.svg
	inkscape -d 2400 -o $@ -T $<

clean:
	-rm -rf *~ _minted*

reset: clean
	-test -z $(FILE) || rm $(FILE)
# end makefile-pandoc

##############################################################################

# begin-all include-files.lua 
--- include-files.lua – filter to include Markdown files
---
--- Copyright: © 2019–2020 Albert Krewinkel
--- License:   MIT – see LICENSE file for details

-- pandoc's List type
local List = require 'pandoc.List'

--- Get include auto mode
local include_auto = false
function get_vars (meta)
  if meta['include-auto'] then
    include_auto = true
  end
end

--- Keep last heading level found
local last_heading_level = 0
function update_last_level(header)
  last_heading_level = header.level
end

--- Shift headings in block list by given number
local function shift_headings(blocks, shift_by)
  if not shift_by then
    return blocks
  end

  local shift_headings_filter = {
    Header = function (header)
      header.level = header.level + shift_by
      return header
    end
  }

  return pandoc.walk_block(pandoc.Div(blocks), shift_headings_filter).content
end

--- Filter function for code blocks
local transclude
function transclude (cb)
  -- ignore code blocks which are not of class "include".
  if not cb.classes:includes 'include' then
    return
  end

  -- Markdown is used if this is nil.
  local format = cb.attributes['format']

  -- Attributes shift headings
  local shift_heading_level_by = 0
  local shift_input = cb.attributes['shift-heading-level-by']
  if shift_input then
    shift_heading_level_by = tonumber(shift_input)
  else
    if include_auto then
      -- Auto shift headings
      shift_heading_level_by = last_heading_level
    end
  end

  --- keep track of level before recusion
  local buffer_last_heading_level = last_heading_level

  local blocks = List:new()
  for line in cb.text:gmatch('[^\n]+') do
    if line:sub(1,2) ~= '//' then
      local fh = io.open(line)
      if not fh then
        io.stderr:write("Cannot open file " .. line .. " | Skipping includes\n")
      else
        local contents = pandoc.read(fh:read '*a', format).blocks
        last_heading_level = 0
        -- recursive transclusion
        contents = pandoc.walk_block(
          pandoc.Div(contents),
          { Header = update_last_level, CodeBlock = transclude }
          ).content
        --- reset to level before recursion
        last_heading_level = buffer_last_heading_level
        blocks:extend(shift_headings(contents, shift_heading_level_by))
        fh:close()
      end
    end
  end
  return blocks
end

return {
  { Meta = get_vars },
  { Header = update_last_level, CodeBlock = transclude }
}
# end include-files.lua

##############################################################################

# begin-all include-code-files.lua 
--- include-code-files.lua – filter to include code from source files
---
--- Copyright: © 2020 Bruno BEAUFILS
--- License:   MIT – see LICENSE file for details

--- Dedent a line
local function dedent (line, n)
  return line:sub(1,n):gsub(" ","") .. line:sub(n+1)
end

--- Filter function for code blocks
local function transclude (cb)
  if cb.attributes.include then
    local content = ""
    local fh = io.open(cb.attributes.include)
    if not fh then
      io.stderr:write("Cannot open file " .. cb.attributes.include .. " | Skipping includes\n")
    else
      local number = 1
      local start = 1

      -- change hyphenated attributes to PascalCase
      for i,pascal in pairs({"startLine", "endLine"})
      do
         local hyphen = pascal:gsub("%u", "-%0"):lower()
         if cb.attributes[hyphen] then
            cb.attributes[pascal] = cb.attributes[hyphen]
            cb.attributes[hyphen] = nil
         end
      end

      if cb.attributes.startLine then
        cb.attributes.startFrom = cb.attributes.startLine
        start = tonumber(cb.attributes.startLine)
      end
      for line in fh:lines ("L")
      do
        if cb.attributes.dedent then
          line = dedent(line, cb.attributes.dedent)
        end
        if number >= start then
          if not cb.attributes.endLine or number <= tonumber(cb.attributes.endLine) then
            content = content .. line
          end
        end
        number = number + 1
      end 
      fh:close()
    end     
    -- remove key-value pair for used keys
    cb.attributes.include = nil
    cb.attributes.startLine = nil
    cb.attributes.endLine = nil
    cb.attributes.dedent = nil
    -- return final code block
    return pandoc.CodeBlock(content, cb.attr)
  end
end

return {
  { CodeBlock = transclude }
}
# end include-code-files.lua

##############################################################################

# begin-all center-image.lua 
--- center-image.lua – filter to center image on their line
---
--- ideas from https://pandoc.org/lua-filters.html#center-images-in-latex-and-html-output
--- TODO : automatize that for images alone on a line (without the need to add a final backslash)

if FORMAT:match 'latex' or FORMAT:match 'beamer' then
  function Image (elem)
    if elem.classes:includes("center", 1) then
      return {
        pandoc.RawInline('latex', '\\centerline{'),
        elem,
        pandoc.RawInline('latex', '}')
      }
    else
      return elem
    end
  end
end
# end center-image.lua

##############################################################################

# begin-all svg-image-to-pdf.lua 
--- svg-image-to-pdf.lua – filter to replace svg filename by pdf ones

if FORMAT:match 'latex' or FORMAT:match 'beamer' then
  function Image (elem)
     elem.src = elem.src:gsub("%.svg$", ".pdf")
     return elem
  end
end
# end svg-image-to-pdf.lua

##############################################################################

# begin-all pandoc-beamer.tex 
\documentclass[10pt,t]{beamer}

% Paquets LaTeX %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Une gestion correcte du français (en entrée et en sortie)
\usepackage[french]{babel}
\usepackage{type1ec}         % devant fontenc (cf type1ec.sty)
\usepackage[T1]{fontenc}     % devant inputenc (utf8 choisi en fonction de ça)
\usepackage[utf8]{inputenc}
\DeclareUnicodeCharacter{20AC}{\euro} % pour la saisie du caractère euro

%% Des "jolies" polices de caractères
\usepackage{lmodern}            % pour sf et tt
\usepackage{fourier}            % pour rm
\usepackage{bbm}                % pour les mathbbm

%% Plein de symboles
\usepackage{amssymb}            % Les symboles mathématiques de l'AMS
\usepackage{latexsym}           % Quelques symboles manquants dans LaTeX 2e
\usepackage{marvosym}           % Quelques symboles en vrac par Martin Vogel
\usepackage{wasysym}            % Quelques symboles en vrac par Roland Waldi
\usepackage{pifont}             % Les symboles Dingbats
\usepackage{textcomp}           % \textcopyleft
\usepackage[copyright]{ccicons} % Les (c) comme dans Creative Commons
\usepackage[official,right]{eurosym} % L'euro

%% Quelques paquets utiles
\usepackage{array}              % pour faciliter les styles de tableaux
\usepackage{longtable,booktabs} % pour les longues tables générées par pandoc
\usepackage{relsize}            % pour faciliter le changement de taille des polices
\usepackage[normalem]{ulem}     % pour avoir des soulignements funky
\usepackage{tikz}               % pour les dessins portables
\usepackage{pgfpages}           % pour les présentations en double-écran
\usepackage{fixltx2e}           % provides \textsubscript
\usepackage{graphicx,grffile}   % pour les images
\usepackage{fancyvrb}
\usepackage{minted}             % pour les programmes

% Configuration pandoc %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Images management
% Scale images if necessary, so that they will not overflow the page
% margins by default, and it is still possible to overwrite the defaults
% using explicit options in \includegraphics[width, height, ...]{}
$if(graphics)$
\makeatletter
\def\maxwidth{\ifdim\Gin@nat@width>\linewidth\linewidth\else\Gin@nat@width\fi}
\def\maxheight{\ifdim\Gin@nat@height>\textheight0.8\textheight\else\Gin@nat@height\fi}
\makeatother
\setkeys{Gin}{width=\maxwidth,height=\maxheight,keepaspectratio}
$endif$

%% Syntax highlighting
$if(highlighting-macros)$
$highlighting-macros$
$endif$

%% Generated lists
\providecommand{\tightlist}{%
  \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}

%% Prevent overfull lines
\setlength{\emergencystretch}{3em}  

% Paramétrages Beamer %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

$if(theme)$\usetheme{$theme$}$endif$
$if(titlebackground)$
\makeatletter
\@ifundefined{titlebackground}
{
  \newcommand{\addtitlebackground}{%
    \begin{tikzpicture}[remember picture,overlay]
      \node[opacity=0.15,inner sep=0pt] at (current page.center){%
        \includegraphics[width=\paperwidth,height=\paperheight]{\inserttitlebackground}%
      };
    \end{tikzpicture}
  }
}
{
  \newcommand{\addtitlebackground}{}
}
\providecommand{\titlebackground}[1]{\def\inserttitlebackground{#1}}
\makeatother
$endif$

% Méta-données du document %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

$if(title)$
\title{$title$}
$endif$
$if(subtitle)$
\subtitle{$subtitle$}
$endif$
$if(author)$
\author{$for(author)$$author$$sep$ \and $endfor$}
$endif$
$if(titlegraphic)$
\titlegraphic{%
  \rule{2em}{0cm}%
$for(titlegraphic)$
$if(titlegraphic.width)$
  \includegraphics[width=$titlegraphic.width$\columnwidth]{$titlegraphic.file$}%
$else$
  \includegraphics[width=.1\columnwidth]{$titlegraphic.file$}%
$endif$
  \rule{2em}{0cm}$if(titlegraphic.nl)$\par\medskip\rule{2em}{0cm}$endif$%
$endfor$
}
$endif$
$if(titlebackground)$
\titlebackground{$titlebackground$}
$endif$
\date{$date$}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}

\begin{frame}[plain]
  $if(titlebackground)$\addtitlebackground$endif$
  \titlepage
\end{frame}

\begin{frame}
  \frametitle{Plan}
  \tableofcontents % il faut compiler deux fois pour mettre à jour la TDM
\end{frame}

$body$

\end{document}
# end pandoc-beamer.tex

##############################################################################

# begin-all pandoc-report.tex 
\documentclass[10pt,twoside,openright]{report}

% Paquets LaTeX %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Une gestion correcte du français (en entrée et en sortie)
\usepackage[french]{babel}
\usepackage{type1ec}         % devant fontenc (cf type1ec.sty)
\usepackage[T1]{fontenc}     % devant inputenc (utf8 choisi en fonction de ça)
\usepackage[utf8]{inputenc}
\DeclareUnicodeCharacter{20AC}{\euro} % pour la saisie du caractère euro

%% Des "jolies" polices de caractères
\usepackage{lmodern}            % pour sf et tt
\usepackage{fourier}            % pour rm
\usepackage{bbm}                % pour les mathbbm

%% Plein de symboles
\usepackage{amssymb,amsmath}    % Les symboles mathématiques de l'AMS
\usepackage{latexsym}           % Quelques symboles manquants dans LaTeX 2e
\usepackage{marvosym}           % Quelques symboles en vrac par Martin Vogel
\usepackage{wasysym}            % Quelques symboles en vrac par Roland Waldi
\usepackage{pifont}             % Les symboles Dingbats
\usepackage{textcomp}           % \textcopyleft
\usepackage[copyright]{ccicons} % Les (c) comme dans Creative Commons
\usepackage[official,right]{eurosym} % L'euro

%% Mise en page
\usepackage{geometry}

%% Quelques paquets utiles
\usepackage{appendix}           % pour la gestion des annexes
\usepackage{array}              % pour faciliter les styles de tableaux
\usepackage{longtable,booktabs} % pour les longues tables générées par pandoc
\usepackage{relsize}            % pour le changement de taille des polices
\usepackage[normalem]{ulem}     % pour avoir des soulignements funky
\usepackage{tikz}               % pour les dessins portables
\usepackage{fixltx2e}           % provides \textsubscript
\usepackage{graphicx,grffile}   % pour les images
\usepackage{fancyvrb}           % pour le code en verbatim
\usepackage{minted}             % pour les programmes
\usepackage{hyperref}           % le plus tard possible d'après la doc

% Configuration pandoc %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Images management
% Scale images if necessary so that they will not overflow the page margins by
% default, and it is still possible to overwrite the defaults using explicit
% options in \includegraphics[width, height, ...]{}
$if(graphics)$
\makeatletter
\def\maxwidth{\ifdim\Gin@nat@width>\linewidth\linewidth\else\Gin@nat@width\fi}
\def\maxheight{\ifdim\Gin@nat@height>\textheight0.8\textheight\else\Gin@nat@height\fi}
\makeatother
\setkeys{Gin}{width=\maxwidth,height=\maxheight,keepaspectratio}
$endif$

%% Syntax highlighting
$if(highlighting-macros)$
$highlighting-macros$
$endif$

%% Generated lists
\providecommand{\tightlist}{%
  \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}

%% Redefines (sub)paragraphs to behave more like sections
\ifx\paragraph\undefined\else
\let\oldparagraph\paragraph
\renewcommand{\paragraph}[1]{\oldparagraph{#1}\mbox{}}
\fi
\ifx\subparagraph\undefined\else
\let\oldsubparagraph\subparagraph
\renewcommand{\subparagraph}[1]{\oldsubparagraph{#1}\mbox{}}
\fi

%% Prevent overfull lines
\setlength{\emergencystretch}{3em}

% Adaptation LaTeX %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\makeatletter

%% pour séparer les auteurs
\renewcommand{\and}{\endtabular\par\tabular[t]{c}}

%% sous-titre
\newcommand{\subtitle}[1]{\gdef\insertsubtitle{#1}}

%% images (logos) sur la page de titre
\newif\iftitlegraphic\titlegraphicfalse
\newcommand{\titlegraphic}[1]{\titlegraphictrue\def\inserttitlegraphic{#1}}

%% fond de la page de titre
\newif\iftitlebackground\titlebackgroundfalse
\newcommand{\titlebackground}[1]{\titlebackgroundtrue\def\inserttitlebackground{#1}}

%% la page de titre
\renewcommand{\maketitle}{%
  \begin{titlepage}%
    % Fond de page
    \iftitlebackground
    \begin{tikzpicture}[remember picture,overlay]
      \node[opacity=0.15,inner sep=0pt] at (current page.center){%
        \includegraphics[width=\paperwidth,height=\paperheight]{\inserttitlebackground}%
      };
    \end{tikzpicture}
    \fi
    % Titre & Date
    \begin{tikzpicture}[remember picture,overlay]
      \node[yshift=-6cm,inner sep=0pt] at (current page.north){%
        \begin{minipage}{.99\columnwidth}
          \centering%
          {\larger[4]\bfseries \@title}\par%
          \@ifundefined{insertsubtitle}{}{%
            \bigskip%
            {\larger[3]\color[gray]{.3}\slshape \insertsubtitle}\par}%
          \@ifundefined{@date}{}{%
            \bigskip%
            {\larger[3] \@date \par}}%
        \end{minipage}
      };%
    \end{tikzpicture}
    % Auteurs
    \begin{tikzpicture}[remember picture,overlay]
      \node[yshift=-6cm,inner sep=0pt] at (current page.center){%
        \begin{minipage}{.9\columnwidth}
          \centering\larger[2]
          \begin{tabular}[t]{c}%
            \@author
          \end{tabular}%
        \end{minipage}
      };%
    \end{tikzpicture}
    % Logos
    \iftitlegraphic
    \begin{tikzpicture}[remember picture,overlay]
      \node[yshift=3cm,inner sep=0pt] at (current page.south){%
        \begin{minipage}{.99\columnwidth}
          \centering\larger[2]\inserttitlegraphic
        \end{minipage}
      };%
    \end{tikzpicture}
    \fi
  \end{titlepage}
}

%% pour débuter les annexes
\newcommand{\appendixes}{\appendix\appendixpage\addappheadtotoc}
\renewcommand{\appendixname}{Annexes}
\renewcommand{\appendixtocname}{Annexes}
\renewcommand{\appendixpagename}{Annexes}

\makeatother

% Configuration document %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\frenchbsetup{%
  ItemLabels=\textendash,%
  og=«,%
  fg=»}
\geometry{%
  a4paper,
  top=1cm,bottom=2cm,
  left=1.5cm,right=1cm}
\hypersetup{%
  $if(title-meta)$
  pdftitle={$title-meta$},
  $endif$
  $if(author-meta)$
  pdfauthor={$author-meta$},
  $endif$
  $if(keywords)$
  pdfkeywords={$for(keywords)$$keywords$$sep$; $endfor$},
  $endif$
  hyperfootnotes=false,
  colorlinks,
  urlcolor=blue,
  linkcolor=,
  pdfstartview=Fit}
\setlength{\parindent}{0pt}
\setlength{\parskip}{6pt plus 2pt minus 1pt}
$if(theme)$\usepackage{reporttheme$theme$}$endif$

$for(header-includes)$
$header-includes$
$endfor$

% Méta-données du document %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

$if(title)$
\title{$title$}
$endif$
$if(subtitle)$
\subtitle{$subtitle$}
$endif$
$if(author)$
\author{$for(author)$$author$$sep$ \and $endfor$}
$endif$
$if(titlegraphic)$
\titlegraphic{%
  \rule{4em}{0cm}%
$for(titlegraphic)$
$if(titlegraphic.width)$
  \begin{minipage}[c]{$titlegraphic.width$\textwidth}
$else$
  \begin{minipage}[c]{.1\textwidth}
$endif$
    \includegraphics[width=\textwidth]{$titlegraphic.file$}%
  \end{minipage}
  \rule{4em}{0cm}$if(titlegraphic.nl)$\par\bigskip\rule{4em}{0cm}$endif$%
$endfor$
}
$endif$
$if(titlebackground)$
\titlebackground{$titlebackground$}
$endif$
\date{$date$}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}

$for(include-before)$
$include-before$
$endfor$

\maketitle

\tableofcontents
$if(lot)$
\listoftables
$endif$
$if(lof)$
\listoffigures
$endif$

$body$

$for(include-after)$
$include-after$
$endfor$

\end{document}
# end pandoc-report.tex

##############################################################################

# begin-ulille beamerthemeulille.sty 
% Un thème Beamer pour l'Université de Lille
% Copyright (C) 2018-2019 Bruno BEAUFILS
% This file is distributed under the terms of the WTFPL license.

\def\filedate{2021/01/26}

% Paramétrages génériques %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Les couleurs de l'Université de Lille 1
\definecolor{Lille1Pourpre}{HTML}{ae2573}
\definecolor{Lille1NeutreNoir}{HTML}{382f2d}
\definecolor{Lille1NeutreBleu}{HTML}{7fa0ac}
\definecolor{Lille1NeutreRose}{HTML}{d8c8d1}
\definecolor{Lille1FroideBleu}{HTML}{1d428a}
\definecolor{Lille1FroideVert}{HTML}{00b398}
\definecolor{Lille1FroideCyan}{HTML}{8dc8e8}
\definecolor{Lille1ChaudeViolet}{HTML}{720062}
\definecolor{Lille1ChaudeMarron}{HTML}{d38235}
\definecolor{Lille1ChaudeTaupe}{HTML}{d5cb9f}
\definecolor{Lille1ViveRouge}{HTML}{f9423a}
\definecolor{Lille1ViveVert}{HTML}{78be20}
\definecolor{Lille1ViveJaune}{HTML}{fce300}

%% Des "jolies" polices de caractères
\usepackage{lmodern}            % pour sf et tt
\usepackage{fourier}            % pour rm
\usepackage{bbm}                % pour les mathbbm

%% La police Lille 1 n'est pas libre (Verdana) on prend le truc le plus proche
\usepackage[scaled=.92]{helvet}

%% Paramétrage hyperref
\hypersetup{%
  colorlinks,%
  linkcolor=,%
  urlcolor=Lille1Pourpre}
  
% Paramétrage Beamer %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Options du thème

%%% page en début de chaque partie ou non
\newif\ifpartpage\partpagetrue
\DeclareOptionBeamer{partpage}{\partpagetrue}
\DeclareOptionBeamer{nopartpage}{\partpagefalse}

%%% page en début de chaque section ou non
\newif\ifsectionpage\sectionpagetrue
\DeclareOptionBeamer{sectionpage}{\sectionpagetrue}
\DeclareOptionBeamer{nosectionpage}{\sectionpagefalse}

%%% page en début de chaque subsection ou non
\newif\ifsubsectionpage\subsectionpagetrue
\DeclareOptionBeamer{subsectionpage}{\subsectionpagetrue}
\DeclareOptionBeamer{nosubsectionpage}{\subsectionpagefalse}

%%% la section dans le pied de page
\newif\ifsectioninfoot\sectioninfoottrue
\DeclareOptionBeamer{sectioninfoot}{\sectioninfoottrue}
\DeclareOptionBeamer{nosectioninfoot}{\sectioninfootfalse}

%%% type de présentation
\DeclareOptionBeamer{long}{%
  \partpagetrue\sectionpagetrue\subsectionpagetrue%
  \sectioninfoottrue}
\DeclareOptionBeamer{court}{%
  \partpagefalse\sectionpagefalse\subsectionpagefalse%
  \sectioninfootfalse}

\ProcessOptionsBeamer

\mode<presentation>             % pour le mode présentation seulement

%% Couleurs
\usecolortheme{spruce}
\setbeamercolor{normal text}{fg=Lille1NeutreNoir}
\setbeamercolor{structure}{fg=black}
\setbeamercolor{frametitle}{fg=white,bg=Lille1Pourpre}
\setbeamercolor{title}{fg=Lille1Pourpre,bg=}
\setbeamercolor{subtitle}{fg=Lille1NeutreBleu}
\setbeamercolor{footline}{fg=white,bg=Lille1Pourpre}
\setbeamercolor{block title}{fg=white,bg=Lille1Pourpre}
\setbeamercolor{block body}{fg=Lille1NeutreNoir,bg=Lille1NeutreRose}
\setbeamercolor{block title example}{fg=white,bg=Lille1NeutreBleu}
\setbeamercolor{block body example}{fg=Lille1NeutreNoir,bg=Lille1NeutreRose}
\setbeamercolor{alerted text}{fg=Lille1Pourpre}

%% Polices de caractères
%\usefonttheme[stillsansseriflarge]{serif}
\usefonttheme[onlylarge]{structurebold}
\setbeamerfont{date in head/foot}{series=\bfseries}
\setbeamerfont{date}{series=\bfseries}
\setbeamerfont{alerted text}{series=\bfseries}

%% Traduction en français
\uselanguage{french}
\languagepath{french}
\deftranslation[to=french]{Definition}{Définition}
\deftranslation[to=french]{Example}{Exemple}
\deftranslation[to=french]{Theorem}{Théorème}

%% Adaptation des modèles

%%% Logos
\titlegraphic{%
  \raisebox{-0.5\height}{\includegraphics[width=6em]{logo-univ-lille}}
}
\logo{\includegraphics[height=1.5em]{logo-univ-lille}}

%%% La page de titre
\renewcommand{\maketitle}[1][]{%
  \addtocounter{framenumber}{-1}\frame[plain,#1]{\titlepage}}

%%% Sections dans la table des matières
\setbeamertemplate{sections/subsections in toc}[sections numbered]

%%% Une page simple devant chaque partie
\ifpartpage
\AtBeginPart{\frame{\partpage}}
\setbeamertemplate{part page}{%
  \begin{center}
    \usebeamerfont{frametitle}\usebeamercolor[fg]{frametitle}\insertpart
  \end{center}
}
\fi

%%% Une page simple (avec table des matières) devant chaque section
\ifsectionpage
\setbeamertemplate{section page}{\tableofcontents[currentsection]}
\AtBeginSection[]{\frame{\sectionpage}}
\fi

%%% Une page simple (avec table des matières) devant chaque sous-section
\ifsubsectionpage
\setbeamertemplate{subsection page}{\tableofcontents[currentsubsection]}
\AtBeginSubsection[]{\frame{\subsectionpage}}
\fi

%%% Styles des blocs
\setbeamertemplate{blocks}[rounded][shadow=true]
\setbeamerfont{block title}{size={}}

%%% Style des listes
\setbeamertemplate{items}[triangle]

%%% Type des continuations
\setbeamertemplate{frametitle continuation}[from second][(suite)]

%%% Des pieds de diapo simples
\setbeamertemplate{footline}
{
  \leavevmode%
  \hbox{%
    \begin{beamercolorbox}[wd=\paperwidth,ht=2.25ex,dp=1ex]{footline}
      \usebeamerfont{date in head/foot}
      \hspace*{1.25ex}
      \inserttitle{}%
      \ifsectioninfoot \hspace*{3ex} \emph{\textmd{\insertsection}\fi}
      \hfill
      \insertframenumber{} / \inserttotalframenumber
      \hspace*{1.25ex}
      \llap{\raisebox{2em}{\insertlogo}\hspace{.75ex}}
    \end{beamercolorbox}}%
  \vskip0pt%
}
\setbeamertemplate{navigation symbols}{} % pas de navigation affichée
\setbeamertemplate{sidebar right}{}      % pas de logo

%% D'autres paramètres Beamer en vrac

%%% On découvre lentement les trucs cachés
\setbeamercovered{dynamic}      

%%% Marges
\setbeamersize{text margin left=1em,text margin right=1em}

% Local Variables:
% time-stamp-active: t 
% time-stamp-pattern: "5/\\filedate{%:y/%02m/%02d}$"
% End:
# end beamerthemeulille.sty

##############################################################################

# begin-ulille reportthemeulille.sty 
\titlegraphic{\includegraphics[width=3cm]{logo-univ-lille}}
# end reportthemeulille.sty

##############################################################################

# begin-ulille logo-univ-lille.pdf base64
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
XpqPrZkFTOIFFSZjYVE8mjivgFtzPIhBEX/zaD738JJKPmmhCD4/r615cYrwVcufaLQVXyLdo+Kd
G7HkXYMs+LgJkAm4jT1uksLr6OPm0syRzDr+0KWaLwmPRneekY/meMCLU7XrzaP1qmXz3vG4uTWP
U7rm8p3km+bFzaNabvLuPB4fCgixSvPxMs0Hrxcv08LCFy8x7/urk8WEDUdz7F9OvvkznWw0nB0U
1vWnxfnWn3aJbEUmFaK8vkhRd5ujcHsPdsIP9384MFuiCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9i
agogICAyODY2CmVuZG9iagozIDAgb2JqCjw8CiAgIC9FeHRHU3RhdGUgPDwKICAgICAgL2EwIDw8
IC9DQSAxIC9jYSAxID4+CiAgID4+CiAgIC9YT2JqZWN0IDw8IC94NiA2IDAgUiA+Pgo+PgplbmRv
YmoKMiAwIG9iago8PCAvVHlwZSAvUGFnZSAlIDEKICAgL1BhcmVudCAxIDAgUgogICAvTWVkaWFC
b3ggWyAwIDAgNzUwIDI1MC4xOTIxMzkgXQogICAvQ29udGVudHMgNCAwIFIKICAgL0dyb3VwIDw8
CiAgICAgIC9UeXBlIC9Hcm91cAogICAgICAvUyAvVHJhbnNwYXJlbmN5CiAgICAgIC9JIHRydWUK
ICAgICAgL0NTIC9EZXZpY2VSR0IKICAgPj4KICAgL1Jlc291cmNlcyAzIDAgUgo+PgplbmRvYmoK
NiAwIG9iago8PCAvTGVuZ3RoIDggMCBSCiAgIC9GaWx0ZXIgL0ZsYXRlRGVjb2RlCiAgIC9UeXBl
IC9YT2JqZWN0CiAgIC9TdWJ0eXBlIC9Gb3JtCiAgIC9CQm94IFsgMCAwIDc1MCAyNTEgXQogICAv
UmVzb3VyY2VzIDcgMCBSCj4+CnN0cmVhbQp4nF1WSZIcNwy81yv4AooAsZDP8BMcFSH5MDpY+n+E
M8HqHnlOEtAglswEav69RpeZ6t7wHxWPXf9x2+3Xj/bt79F+/L7cs8fQJnv2nNZ+Nno8Xp7VPj49
a3Xf9nhCBZ7oy7XsHHnB4d1m2RvZZFkXW+2GZ3Vx5tC+R5TtsKTn2rB2H5vxo5u0+2oeo6+J+Iyu
hgrhfe4Fe/ZARk/pY3zaqJD+P48jlyZ7SutzoSmUjsWA7CuST9bsqhOehScC2/qYu9qIvev3+fS8
rnqg3cxrzDRMkfukBDI6ZvUghcvuaztfBCaTAJqK+fEitI+Iq+DViPaVgLv9c7GPKrOjx5wkBQUI
m2zroLI50wUKbyFgjseR+HllnwcNBIKZ61AQBgcAdK/ZZHsFMJQAO/q4K+cufKRHvRgktaFOX8PB
CbILqkkEST74CXuPIxUHsk78MOQSwjM6OXtMohF9b07/isBLcsMMDvJIuwJYdNxXSgknS0IsSq7c
gQ27RFc6DV25YhBoB8WoRT4ZxQaVYFC9G7Tmu0blQG4Jvxy14Xe8sAA4D1rKCC9dkteYf9jAmcTc
b48OK12zhoEgFWVttjVraVRASe5nBVBdVc4GxCFZ1Q4hqQXBy74LTkjj+gzBugREBBzqqUOGyhpI
ubRoR8PGHAOwom/Ko7pa3KKrWE83ON74gtRI5BhYUPz7UVnJosqg+kky0VLBrhIbNAEVXDWq77N6
UIgxK0IdIVxaPzb9HC1N3/b9rLO8PGffdc8qKroLLE4ALCvwwDfTj8erUXhM7His7hIwnQH0daA3
91pIXXwkdbq+btbdvl+JObg8RBsg/2xvB3MI0tLB3aTCxi5zacNmU7qJEYZluyBILsNdHq528Dju
MkNmCy8QEtBTndVqVrj3jZ6Ci4lwcOdCrsi+w466KY+J+Dn+dOQ8UBIetDhx3Ia0oCKsouGfSBda
COTctU8oTynxZ+wy93Ke8KxdwXC8gJi60iXPTVWunUuyRuaTylQ0gR4LGSzrIpJc1YINx6qAlbps
OY8yAD+hBdZz9g3J7Cwqc0qhAjN3In3WTj/mfcAZ6OAVAOwocMh6rCiobUerM2gPFbasHMDqoxwO
FZdD2kXP7pbwRK0fZ+SHhkuADgkX8cCpcC5xGiqBxLMsiUuiC1HOroELrgCvAi4oszN89x3gFvGC
dp0Xxwk+OeCvXC0w7zorvDTE61Hf18SVgdJw4dIZrgWejxLe4ZZfAzsA54RugRaOWWbpZuzrsQgd
OAQGz6+4CESqTqEXjhMDov45JOROURO1hKsw9jlFaAVHEXaeTbfaCMQPJKiT300BzJh1VTBZ8DW0
l8axTaOihWUv4qJgIwc+FIT10ejLzKLifjvWqhGYnaqIEiUOF7YVtxtJ54yHdVxyePzZwEOijPNH
CGVVf7489l3QUaqPhwovmGScFtJGHR9mzHWYnb1SWkkNfw1ga/Hhwqg81aR2URJ7vRYR7CVOEb/c
WlJETtLFT3rOIpMg4Tsdy9qXTbl4qf66/gPUkObPCmVuZHN0cmVhbQplbmRvYmoKOCAwIG9iagog
ICAxMTQ0CmVuZG9iago3IDAgb2JqCjw8CiAgIC9FeHRHU3RhdGUgPDwKICAgICAgL2EwIDw8IC9D
QSAxIC9jYSAxID4+CiAgID4+Cj4+CmVuZG9iagoxIDAgb2JqCjw8IC9UeXBlIC9QYWdlcwogICAv
S2lkcyBbIDIgMCBSIF0KICAgL0NvdW50IDEKPj4KZW5kb2JqCjkgMCBvYmoKPDwgL1Byb2R1Y2Vy
IChjYWlybyAxLjE2LjAgKGh0dHBzOi8vY2Fpcm9ncmFwaGljcy5vcmcpKQogICAvQ3JlYXRvciA8
RkVGRjAwNDkwMDZFMDA2QjAwNzMwMDYzMDA2MTAwNzAwMDY1MDAyMDAwMzEwMDJFMDAzMDAwMkUw
MDMyMDAyMDAwMjgwMDY4MDA3NDAwNzQwMDcwMDA3MzAwM0EwMDJGMDAyRjAwNjkwMDZFMDA2QjAw
NzMwMDYzMDA2MTAwNzAwMDY1MDAyRTAwNkYwMDcyMDA2NzAwMjk+CiAgIC9DcmVhdGlvbkRhdGUg
KEQ6MjAyMTAyMDUyMzU0MzQrMDEnMDApCj4+CmVuZG9iagoxMCAwIG9iago8PCAvVHlwZSAvQ2F0
YWxvZwogICAvUGFnZXMgMSAwIFIKPj4KZW5kb2JqCnhyZWYKMCAxMQowMDAwMDAwMDAwIDY1NTM1
IGYgCjAwMDAwMDQ3MDMgMDAwMDAgbiAKMDAwMDAwMzA4MSAwMDAwMCBuIAowMDAwMDAyOTgxIDAw
MDAwIG4gCjAwMDAwMDAwMTUgMDAwMDAgbiAKMDAwMDAwMjk1OCAwMDAwMCBuIAowMDAwMDAzMzA2
IDAwMDAwIG4gCjAwMDAwMDQ2MzEgMDAwMDAgbiAKMDAwMDAwNDYwOCAwMDAwMCBuIAowMDAwMDA0
NzY4IDAwMDAwIG4gCjAwMDAwMDUwNTEgMDAwMDAgbiAKdHJhaWxlcgo8PCAvU2l6ZSAxMQogICAv
Um9vdCAxMCAwIFIKICAgL0luZm8gOSAwIFIKPj4Kc3RhcnR4cmVmCjUxMDQKJSVFT0YK
# end logo-univ-lille.pdf

##############################################################################
